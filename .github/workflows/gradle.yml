# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: "testing"
          POSTGRES_DB: testing
          POSTGRES_USER: root
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    - name: Setup NPM
      uses: actions/setup-node@v3
      with:
        node-version: 18
    - run: npm ci
      working-directory: frontend-vite
    - run: npm run build
      working-directory: frontend-vite
    - name: Build with Gradle
      uses: gradle/gradle-build-action@v2
      with:
        arguments: build --stacktrace
      env:
        POSTGRES_HOST: postgres
        POSTGRES_PORT: 5432
        POSTGRES_USER: root
        POSTGRES_PASSWORD: testing
        POSTGRES_DATABASE: testing
        SERVER_URL: "https://local.eu"
        MAILJET_PUBLIC: "abv"
        MAILJET_SECRET: "def"
        ADMIN_FIRST_NAME: "Test"
        ADMIN_LAST_NAME: "User"
        ADMIN_MAIL: "test@user.de"
        ADMIN_PASSWORD: "12345"
        REDIS_HOST: "cache"
        REDIS_PORT: "6379"
        REDIS_PASSWORD: ""
    - name: Upload test results
      uses: actions/upload-artifact@v2
      with:
        name: test-results
        path: build/reports/tests
